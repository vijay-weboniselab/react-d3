{"version":3,"sources":["PostsLayout/Posts/Post/Post.js","PostsLayout/Posts/Posts.js","PostsLayout/PostsLayout.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","minWidth","width","marginTop","marginBottom","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Post","props","classes","likeButtonClicked","useCallback","likeClicked","id","Card","className","CardHeader","Avatar","aria-label","src","owner","picture","title","toUpperCase","firstName","lastName","subheader","publishDate","CardMedia","image","tags","toString","CardActions","IconButton","onClick","color","liked","likes","CardContent","Typography","variant","component","text","memo","Posts","useState","posts","setPosts","useEffect","axios","get","headers","then","res","data","map","post","likeClickedEvent","p","updatedPosts","PostsLayout","style","display","flexDirection","justifyContent","alignItems"],"mappings":"6RAaMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,IACVC,SAAU,IACVC,MAAO,OACPC,UAAW,GACXC,aAAc,IAEhBC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYb,EAAMc,YAAYC,OAAO,YAAa,CAChDC,SAAUhB,EAAMc,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,kBAEbQ,OAAQ,CACNC,gBAAiBC,IAAI,UAKzB,SAASC,EAAKC,GACZ,IAAMC,EAAU1B,IAEV2B,EAAoBC,uBAAY,kBAAMH,EAAMI,YAAYJ,EAAMK,OAEpE,OACE,8BACE,eAACC,EAAA,EAAD,CAAMC,UAAWN,EAAQvB,KAAzB,UACE,cAAC8B,EAAA,EAAD,CACEZ,OACE,cAACa,EAAA,EAAD,CACEC,aAAW,SACXH,UAAWN,EAAQL,OACnBe,IAAKX,EAAMY,MAAMC,UAGrBC,MACEd,EAAMY,MAAME,MAAMC,cAClB,IACAf,EAAMY,MAAMI,UACZ,IACAhB,EAAMY,MAAMK,SAEdC,UAAWlB,EAAMmB,cAEnB,cAACC,EAAA,EAAD,CACEb,UAAWN,EAAQjB,MACnBqC,MAAOrB,EAAMqB,MACbP,MAAOd,EAAMsB,KAAKC,aAEpB,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYf,aAAW,OAAOgB,QAAS,kBAAMxB,KAA7C,SACE,cAAC,IAAD,CAAcyB,MAAO3B,EAAM4B,MAAQ,YAAc,eAElD,IAAM5B,EAAM6B,MAAQ,YAEvB,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQL,MAAM,gBAAgBM,UAAU,IAA5D,SACGjC,EAAMkC,cAQJC,qBAAKpC,GC1BLqC,MA1Df,SAAepC,GAAQ,IAAD,EACQqC,mBAAS,IADjB,mBACXC,EADW,KACJC,EADI,KAIlBC,qBAAU,WACNC,IACCC,IAAI,sCAAuC,CAC1CC,QAAS,CACP,SAAU,8BAGbC,MAAK,SAAAC,GACF,OAAOA,EAAIC,KAAKA,KAAKC,KAAI,SAAAC,GACtB,OAAO,2BAAIA,GAAX,IAAiBpB,OAAQ,UAG/BgB,MAAK,SAACC,GACHN,EAAUM,QAIf,IAEH,IAAMI,EAAmB9C,uBAAY,SAAC+C,GAClC,IAAIC,EAAY,YAAOb,GACvBa,EAAaJ,KAAI,SAAAC,GACVA,EAAK3C,KAAO6C,IACXF,EAAKpB,OAASoB,EAAKpB,MAChBoB,EAAKpB,MACJoB,EAAKnB,OAAS,EAEdmB,EAAKnB,OAAS,MAI1BU,EAAUY,MAoBd,OAAOb,EAAMS,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,aAAoB5C,YAAe6C,GAAsBD,GAA9CA,EAAK3C,QC9C9B+C,UATf,WACI,OACI,sBAAKC,MAAO,CAACC,QAAS,OAAQC,cAAe,SAAUC,eAAgB,SAAUC,WAAY,UAA7F,UACI,gEACA,cAAC,EAAD","file":"static/js/10.b9a6db2b.chunk.js","sourcesContent":["import React, { memo, useMemo, useCallback} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n// creating style\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    minWidth: 300,\n    width: \"50vw\",\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\n\nfunction Post(props) {\n  const classes = useStyles();\n \n  const likeButtonClicked = useCallback(() => props.likeClicked(props.id));\n\n  return (\n    <div>\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar\n              aria-label=\"recipe\"\n              className={classes.avatar}\n              src={props.owner.picture}\n            ></Avatar>\n          }\n          title={\n            props.owner.title.toUpperCase() +\n            \" \" +\n            props.owner.firstName +\n            \" \" +\n            props.owner.lastName\n          }\n          subheader={props.publishDate}\n        />\n        <CardMedia\n          className={classes.media}\n          image={props.image}\n          title={props.tags.toString()}\n        />\n        <CardActions>\n          <IconButton aria-label=\"like\" onClick={() => likeButtonClicked()}>\n            <FavoriteIcon color={props.liked ? \"secondary\" : \"disabled\"} />\n          </IconButton>\n          {\" \" + props.likes + \" likes\"}\n        </CardActions>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.text}\n          </Typography>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default memo(Post);\n","import React,{useEffect, useState,useCallback} from 'react'\nimport axios from 'axios'\nimport Post from './Post/Post';\nfunction Posts(props) {\n    const [posts, setPosts] = useState([]);\n    \n    // componentdidmount / componentdidunmount  \n    useEffect(() => {\n        axios\n        .get(\"https://dummyapi.io/data/api/post  \", {\n          headers: {\n            \"app-id\": \"5faeac89ea925565ef6a1ad5\",\n          },\n        })\n        .then(res => {\n            return res.data.data.map(post => {\n               return {...post, liked : false}\n            })\n        })\n        .then((res) => {\n            setPosts( res);\n            // console.log(res)\n        });\n        \n    }, []);\n\n    const likeClickedEvent = useCallback((p) => {\n        let updatedPosts = [...posts];\n        updatedPosts.map(post=> {\n            if(post.id === p){\n                post.liked = !post.liked\n                if(post.liked){\n                    post.likes += 1;\n                } else {\n                    post.likes -= 1;\n                }\n            }\n        })\n        setPosts( updatedPosts)\n    })\n    // likeClick event\n   /*  const likeClicked = (p) =>{\n        \n        let updatedPosts = [...posts];\n        updatedPosts.map(post=> {\n            if(post.id === p){\n                post.liked = !post.liked\n                if(post.liked){\n                    post.likes += 1;\n                } else {\n                    post.likes -= 1;\n                }\n            }\n        })\n        setPosts( updatedPosts)\n       \n    } */\n\n    return posts.map(post => <Post key={post.id} likeClicked = {likeClickedEvent} {...post} />)\n}\n\nexport default Posts\n","import React from 'react'\nimport Posts from './Posts/Posts'\n\nfunction PostsLayout() {\n    return (\n        <div style={{display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\"}}>\n            <h3>Loading posts from dummyapi.io</h3>\n            <Posts />\n        </div>\n    )\n}\n\nexport default PostsLayout\n"],"sourceRoot":""}