{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PostsLayout","lazy","Navigation","SuperHeroLayout","ChartsLayout","App","fallback","className","path","exact","render","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qOAGMA,EAAcC,gBAAK,kBAAO,+DAC1BC,EAAaD,gBAAK,kBAAM,8DACxBE,EAAkBF,gBAAK,kBAAM,uDAC7BG,EAAeH,gBAAK,kBAAM,uDAoBjBI,MAlBf,WACE,OACE,cAAC,IAAD,UACI,cAAC,WAAD,CAAUC,SAAU,mDAApB,SACF,sBAAKC,UAAU,MAAf,UACE,cAACL,EAAD,IACA,eAAC,IAAD,WACA,cAAC,IAAD,CAAOM,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAG,eACjD,cAAC,IAAD,CAAOH,KAAK,UAAUC,OAAK,EAACC,OAAQ,kBAAM,cAACN,EAAD,OAC1C,cAAC,IAAD,CAAOI,KAAK,SAASC,OAAK,EAACC,OAAQ,kBAAM,cAACV,EAAD,OACzC,cAAC,IAAD,CAAOQ,KAAK,cAAcC,OAAK,EAACC,OAAQ,kBAAM,cAACP,EAAD,kBCNvCS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7a6c2a61.chunk.js","sourcesContent":["import \"./App.css\";\nimport { BrowserRouter, Redirect, Route,Switch } from \"react-router-dom\";\nimport React, {lazy, Suspense} from 'react'\nconst PostsLayout = lazy(() =>  import(\"./PostsLayout/PostsLayout\"));\nconst Navigation = lazy(() => import(\"./NavigationLayout/NavigationLayout\"))\nconst SuperHeroLayout = lazy(() => import(\"./SuperHeroLayout/SuperHeroLayout\")) \nconst ChartsLayout = lazy(() => import(\"./ChartsLayout/ChartsLayout\"))\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <Suspense fallback={<div>Loading .. . . .</div>}>\n      <div className=\"App\">\n        <Navigation />\n        <Switch>\n        <Route path=\"/\" exact render={() => <Redirect to=\"/charts\"/>} />\n        <Route path=\"/charts\" exact render={() => <ChartsLayout />} />\n        <Route path=\"/posts\" exact render={() => <PostsLayout />} />\n        <Route path=\"/super-hero\" exact render={() => <SuperHeroLayout/>} />\n        </Switch>\n      </div>\n        </Suspense>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}