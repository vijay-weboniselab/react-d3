{"version":3,"sources":["SuperHeroLayout/SuperHeroCard/SuperHeroCard.module.css","logo.svg","SuperHeroLayout/SuperHeroCard/SuperHeroCard.js","SuperHeroLayout/SuperHeroLayout.js","api/endpoints.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SuperHeroCard","props","className","classes","superHeroContainer","imageHolder","src","image","url","alt","propertyName","propertyValue","id","name","biography","aliases","toString","publisher","alignment","appearance","gender","race","height","weight","work","occupation","base","connections","relatives","SuperHeroLayout","useState","onClick","event","axios","get","Math","floor","random","headers","then","res","console","log","catch","err","response","powerstats","intelligence","strength","speed","durability","power","combat","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7a333a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superHeroContainer\":\"SuperHeroCard_superHeroContainer__2NufH\",\"propertyName\":\"SuperHeroCard_propertyName__N5CBo\",\"propertyValue\":\"SuperHeroCard_propertyValue__1rmRb\",\"imageHolder\":\"SuperHeroCard_imageHolder__bNqj3\"};","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Fragment } from \"react\";\nimport classes from \"./SuperHeroCard.module.css\";\n\nfunction SuperHeroCard(props) {\n  return (\n    <Fragment>\n      <div className={classes.superHeroContainer}>\n        <div className={classes.imageHolder}>\n          <img src={props.image.url} alt=\"profile-pic\" />\n        </div>\n        <div>\n          <div>\n            <span className={classes.propertyName}>ID</span>{\" \"}\n            <span className={classes.propertyValue}>{props.id}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Name</span>{\" \"}\n            <span className={classes.propertyValue}>{props.name}</span>\n          </div>\n          {/* Biography */}\n          <div>\n            <span className={classes.propertyName}>Full Name</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography[\"full-name\"]}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Alter Egos</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography['alter-egos']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Aliases</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography.aliases.toString()}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Place of Birth</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography['place-of-birth']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>First Appearance</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography['first-appearance']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Publisher</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography.publisher}</span>\n          </div>\n          <div>\n            {\" \"}\n            <span className={classes.propertyName}>Alignment</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography.alignment}</span>\n          </div>\n          {/* appearance */}\n          <div>\n            <span className={classes.propertyName}>Gender</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance.gender}</span>\n          </div>\n          <div>\n            {\" \"}\n            <span className={classes.propertyName}>Race</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance.race}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Height</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance.height.toString()}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Weight</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance.weight.toString()}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Eye Color</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance['eye-color']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Hair Color</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance['hair-color']}</span>\n          </div>\n          {/* work */}\n          <div>\n            <span className={classes.propertyName}>Work</span>{\" \"}\n            <span className={classes.propertyValue}>{props.work.occupation}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Base</span>{\" \"}\n            <span className={classes.propertyValue}>{props.work.base}</span>\n          </div>\n          {/* connections */}\n          <div>\n            <span className={classes.propertyName}>Group Affiliation</span>{\" \"}\n            <span className={classes.propertyValue}>{props.connections['group-affiliation']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Relatives</span>{\" \"}\n            <span className={classes.propertyValue}>{props.connections.relatives}</span>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default SuperHeroCard;\n","import React, { Fragment, useState } from \"react\";\nimport SuperHeroCard from \"./SuperHeroCard/SuperHeroCard\";\nimport classes from \"./SuperHeroLayout.module.css\";\nimport axios from 'axios';\nimport {BASE_URL} from '../api/endpoints'\nexport default function SuperHeroLayout(props) {\n    const [superHero,setSuperHero] = useState({});\n    const superHero1 = {\n    response: \"success\",\n    id: \"10\",\n    name: \"Agent Bob\",\n    powerstats: {\n      intelligence: \"10\",\n      strength: \"8\",\n      speed: \"13\",\n      durability: \"5\",\n      power: \"5\",\n      combat: \"20\",\n    },\n    biography: {\n      'full-name': \"Bob\",\n      'alter-egos': \"No alter egos found.\",\n      aliases: [\"Bob\", \"agent of Hydra\", \"Bob\", \"agent of A.I.M\"],\n      'place-of-birth': \"-\",\n      'first-appearance': \"Cable & Deadpool #38 (May, 2007)\",\n      publisher: \"Marvel Comics\",\n      alignment: \"good\",\n    },\n    appearance: {\n      gender: \"Male\",\n      race: \"Human\",\n      height: [\"5'10\", \"178 cm\"],\n      weight: [\"181 lb\", \"81 kg\"],\n      'eye-color': \"Brown\",\n      'hair-color': \"Brown\",\n    },\n    work: {\n      occupation: \"Mercenary, janitor; former pirate, terrorist\",\n      base: \"Mobile; formerly Manhattan, Hellcarrier\",\n    },\n    connections: {\n      'group-affiliation': \"A.I.M., Deadpool; formerly Agency X, Hydra\",\n      'relatives': \"Allison (ex-wife); Terry and Howie (sons)\",\n    },\n    image: {\n      url: \"https://www.superherodb.com/pictures2/portraits/10/100/10255.jpg\",\n    },\n  };\n\n  const getRandomSup = ()=>{\n      axios.get(BASE_URL + (Math.floor(Math.random() * 729)), {\n          headers : {\n            'Access-Control-Allow-Origin' : '*',\n            'Access-Control-Allow-Methods': 'HEAD, GET, POST, PUT, PATCH, DELETE, OPTIONS',\n            'Access-Control-Allow-Headers': 'Access-Control-Allow-Headers: X-API-KEY, Origin, X-Requested-With, Content-Type, Accept, Access-Control-Request-Method,Access-Control-Request-Headers, Authorization',\n            'Content-Type': 'application/json'\n         \n        }\n      })\n      .then(res => {\n          console.log(res);\n      })\n      .catch(err => console.log(err));\n    \n    }\n\n  return (\n  \n  <Fragment>\n      <button onClick={(event)=> getRandomSup()}>Random Super Hero</button>\n      <SuperHeroCard {...superHero1} />\n    </Fragment>\n  );\n}\n","export const BASE_URL = \"http://superheroapi.com/api.php/3441310675917369/\"","import logo from './logo.svg';\nimport './App.css';\nimport SuperHeroLayout from './SuperHeroLayout/SuperHeroLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SuperHeroLayout />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}