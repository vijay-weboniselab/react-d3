{"version":3,"sources":["ChartsLayout/BarChart/BarChart.js","ChartsLayout/ChartsLayout.js"],"names":["BarChart","useState","data","setData","svgRef","useRef","useEffect","svg","select","current","xScale","scaleBand","domain","map","value","index","range","padding","yScale","scaleLinear","colorScale","clamp","xAxis","axisBottom","ticks","length","style","call","yAxis","axisRight","selectAll","join","attr","bandwidth","transition","Fragment","ref","className","onClick","filter","ChartsLayout","props","useRouteMatch","path","url","useHistory","console","log","to","color","exact","component","render"],"mappings":"kNA4DeA,MAzDf,WAAqB,IAAD,EACMC,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KADxC,mBACXC,EADW,KACLC,EADK,KAEZC,EAASC,mBAuCf,OArCAC,qBAAU,WACR,IAAMC,EAAMC,YAAOJ,EAAOK,SACpBC,EAASC,cACZC,OAAOV,EAAKW,KAAI,SAACC,EAAOC,GAAR,OAAkBA,MAClCC,MAAM,CAAC,EAAG,MACVC,QAAQ,IAELC,EAASC,cAAcP,OAAO,CAAC,EAAG,MAAMI,MAAM,CAAC,IAAK,IAEpDI,EAAaD,cAChBP,OAAO,CAAC,GAAI,IAAK,MACjBI,MAAM,CAAC,QAAS,SAAU,QAC1BK,OAAM,GAEHC,EAAQC,YAAWb,GAAQc,MAAMtB,EAAKuB,QAE5ClB,EAAIC,OAAO,WAAWkB,MAAM,YAAa,qBAAqBC,KAAKL,GAEnE,IAAMM,EAAQC,YAAUX,GAgBxB,OAfAX,EAAIC,OAAO,WAAWkB,MAAM,YAAa,qBAAqBC,KAAKC,GAEnErB,EACGuB,UAAU,QACV5B,KAAKA,GACL6B,KAAK,QACLC,KAAK,QAAS,OAEdN,MAAM,YAAa,gBACnBM,KAAK,KAAK,SAAClB,EAAOC,GAAR,OAAkBL,EAAOK,MACnCiB,KAAK,KAAM,KACXA,KAAK,QAAStB,EAAOuB,aACrBC,aACAF,KAAK,OAAQZ,GACbY,KAAK,UAAU,SAAClB,GAAD,OAAW,IAAMI,EAAOJ,MACnC,eACN,CAACZ,IAGF,eAAC,IAAMiC,SAAP,WACE,sBAAKC,IAAKhC,EAAV,UACE,mBAAGiC,UAAU,WACb,mBAAGA,UAAU,cAEf,wBAAQC,QAAS,kBAAMnC,EAAQD,EAAKW,KAAI,SAAAC,GAAK,OAAIA,EAAQ,OAAzD,yBAGA,wBAAQwB,QAAS,kBAAMnC,EAAQD,EAAKqC,QAAO,SAAAzB,GAAK,OAAIA,EAAQ,QAA5D,6B,wBCTS0B,UAhCf,SAAsBC,GAAQ,IAAD,EACPC,cAAdC,EADqB,EACrBA,KAAMC,EADe,EACfA,IAGZ,OAFgBC,cAChBC,QAAQC,IAAIJ,EAAKC,GAEf,gCACE,uBACA,eAAC,IAAD,WACE,gCACE,eAAC,IAAD,CAASI,GAAIJ,EAAM,YAAnB,UACG,IACD,sBAAMlB,MAAO,CAAEuB,MAAO,SAAtB,0BAEF,eAAC,IAAD,CAASD,GAAIJ,EAAM,aAAnB,UACG,IACD,sBAAMlB,MAAO,CAAEuB,MAAO,SAAtB,8BAGJ,uBACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAON,KAAMA,EAAO,YAAaO,OAAK,EAACC,UAAWnD,IAClD,cAAC,IAAD,CACE2C,KAAMA,EAAO,aACbO,OAAK,EACLE,OAAQ,kBAAM","file":"static/js/8.d0867927.chunk.js","sourcesContent":["import React, { useRef, useEffect ,useState} from \"react\";\nimport { select, axisBottom, axisRight, scaleLinear, scaleBand } from \"d3\";\nimport './BarChart.module.css'\nfunction BarChart() {\n  const [data, setData] = useState([25, 30, 45, 60, 10, 65, 75]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const xScale = scaleBand()\n      .domain(data.map((value, index) => index))\n      .range([0, 300])\n      .padding(0.5);\n\n    const yScale = scaleLinear().domain([0, 150]).range([150, 0]);\n\n    const colorScale = scaleLinear()\n      .domain([75, 100, 150])\n      .range([\"green\", \"orange\", \"red\"])\n      .clamp(true);\n\n    const xAxis = axisBottom(xScale).ticks(data.length);\n\n    svg.select(\".x-axis\").style(\"transform\", \"translateY(150px)\").call(xAxis);\n\n    const yAxis = axisRight(yScale);\n    svg.select(\".y-axis\").style(\"transform\", \"translateX(300px)\").call(yAxis);\n\n    svg\n      .selectAll(\".bar\")\n      .data(data)\n      .join(\"rect\")\n      .attr(\"class\", \"bar\")\n\n      .style(\"transform\", \"scale(1, -1)\")\n      .attr(\"x\", (value, index) => xScale(index))\n      .attr(\"y\", -150)\n      .attr(\"width\", xScale.bandwidth())\n      .transition()\n      .attr(\"fill\", colorScale)\n      .attr(\"height\", (value) => 150 - yScale(value));\n    return () => {};\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      <svg ref={svgRef}>\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n      </svg>\n      <button onClick={() => setData(data.map(value => value + 5))}>\n        Update data\n      </button>\n      <button onClick={() => setData(data.filter(value => value < 35))}>\n        Filter data\n      </button>\n    </React.Fragment>\n  );\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport BarChart from \"./BarChart/BarChart\";\nimport \"./ChartsLayout.module.css\";\nimport {\n  BrowserRouter,\n  NavLink,\n  Route,\n  Switch,\n  useRouteMatch,\n  useHistory\n} from \"react-router-dom\";\n\nfunction ChartsLayout(props) {\n  let { path, url } = useRouteMatch();\n  const history = useHistory();\n  console.log(path,url)\n  return (\n    <div>\n      <br />\n      <BrowserRouter>\n        <nav>\n          <NavLink to={url + \"/barchart\"}>\n            {\" \"}\n            <span style={{ color: \"black\" }}>Bar Chart</span>\n          </NavLink>\n          <NavLink to={url + \"/linechart\"}>\n            {\" \"}\n            <span style={{ color: \"black\" }}>Line Chart</span>\n          </NavLink>\n        </nav>\n        <hr />\n        <Switch>\n          <Route path={path + \"/barchart\"} exact component={BarChart} />\n          <Route\n            path={path + \"/linechart\"}\n            exact\n            render={() => <h1>Hello everyone</h1>}\n          />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default ChartsLayout;\n"],"sourceRoot":""}