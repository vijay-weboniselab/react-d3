{"version":3,"sources":["SuperHeroLayout/SuperHeroCard/SuperHeroCard.module.css","SuperHeroLayout/SuperHeroLayout.module.css","logo.svg","SuperHeroLayout/SuperHeroCard/SuperHeroCard.js","SuperHeroLayout/SuperHeroLayout.js","api/endpoints.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","SuperHeroCard","props","className","classes","superHeroContainer","imageHolder","src","image","url","alt","detailsHolder","propertyName","propertyValue","id","name","biography","aliases","toString","publisher","alignment","appearance","gender","race","height","weight","work","occupation","base","connections","relatives","SuperHeroLayout","useState","superHero","setSuperHero","useEffect","loadSuperHero","Math","floor","random","fetch","encodeURIComponent","then","response","ok","json","Error","data","JSON","parse","contents","element","header","onClick","event","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18f22053.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superHeroContainer\":\"SuperHeroCard_superHeroContainer__2NufH\",\"propertyName\":\"SuperHeroCard_propertyName__N5CBo\",\"propertyValue\":\"SuperHeroCard_propertyValue__1rmRb\",\"imageHolder\":\"SuperHeroCard_imageHolder__bNqj3\",\"detailsHolder\":\"SuperHeroCard_detailsHolder__2nnSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"SuperHeroLayout_header__1L4rl\"};","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Fragment } from \"react\";\nimport classes from \"./SuperHeroCard.module.css\";\n\nfunction SuperHeroCard(props) {\n  return (\n    <Fragment>\n      <div className={classes.superHeroContainer}>\n        <div className={classes.imageHolder}>\n          <img src={props.image.url} alt=\"profile-pic\" />\n        </div>\n        <div className={classes.detailsHolder}>\n          <div>\n            <span className={classes.propertyName}>ID</span>{\" \"}\n            <span className={classes.propertyValue}>{props.id}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Name</span>{\" \"}\n            <span className={classes.propertyValue}>{props.name}</span>\n          </div>\n          {/* Biography */}\n          <div>\n            <span className={classes.propertyName}>Full Name</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography[\"full-name\"]}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Alter Egos</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography['alter-egos']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Aliases</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography.aliases.toString()}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Place of Birth</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography['place-of-birth']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>First Appearance</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography['first-appearance']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Publisher</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography.publisher}</span>\n          </div>\n          <div>\n            {\" \"}\n            <span className={classes.propertyName}>Alignment</span>{\" \"}\n            <span className={classes.propertyValue}>{props.biography.alignment}</span>\n          </div>\n          {/* appearance */}\n          <div>\n            <span className={classes.propertyName}>Gender</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance.gender}</span>\n          </div>\n          <div>\n            {\" \"}\n            <span className={classes.propertyName}>Race</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance.race}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Height</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance.height.toString()}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Weight</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance.weight.toString()}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Eye Color</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance['eye-color']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Hair Color</span>{\" \"}\n            <span className={classes.propertyValue}>{props.appearance['hair-color']}</span>\n          </div>\n          {/* work */}\n          <div>\n            <span className={classes.propertyName}>Work</span>{\" \"}\n            <span className={classes.propertyValue}>{props.work.occupation}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Base</span>{\" \"}\n            <span className={classes.propertyValue}>{props.work.base}</span>\n          </div>\n          {/* connections */}\n          <div>\n            <span className={classes.propertyName}>Group Affiliation</span>{\" \"}\n            <span className={classes.propertyValue}>{props.connections['group-affiliation']}</span>\n          </div>\n          <div>\n            <span className={classes.propertyName}>Relatives</span>{\" \"}\n            <span className={classes.propertyValue}>{props.connections.relatives}</span>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default SuperHeroCard;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport SuperHeroCard from \"./SuperHeroCard/SuperHeroCard\";\nimport classes from \"./SuperHeroLayout.module.css\";\n// import axios from \"axios\";\nimport { BASE_URL } from \"../api/endpoints\";\nexport default function SuperHeroLayout(props) {\n  const [superHero, setSuperHero] = useState({});\n  const superHero1 = {\n    response: \"success\",\n    id: \"10\",\n    name: \"Agent Bob \",\n    powerstats: {\n      intelligence: \"10\",\n      strength: \"8\",\n      speed: \"13\",\n      durability: \"5\",\n      power: \"5\",\n      combat: \"20\",\n    },\n    biography: {\n      \"full-name\": \"Bob\",\n      \"alter-egos\": \"No alter egos found.\",\n      aliases: [\"Bob\", \"agent of Hydra\", \"Bob\", \"agent of A.I.M\"],\n      \"place-of-birth\": \"-\",\n      \"first-appearance\": \"Cable & Deadpool #38 (May, 2007)\",\n      publisher: \"Marvel Comics\",\n      alignment: \"good\",\n    },\n    appearance: {\n      gender: \"Male\",\n      race: \"Human\",\n      height: [\"5'10\", \"178 cm\"],\n      weight: [\"181 lb\", \"81 kg\"],\n      \"eye-color\": \"Brown\",\n      \"hair-color\": \"Brown\",\n    },\n    work: {\n      occupation: \"Mercenary, janitor; former pirate, terrorist\",\n      base: \"Mobile; formerly Manhattan, Hellcarrier\",\n    },\n    connections: {\n      \"group-affiliation\": \"A.I.M., Deadpool; formerly Agency X, Hydra\",\n      relatives: \"Allison (ex-wife); Terry and Howie (sons)\",\n    },\n    image: {\n      url: \"https://www.superherodb.com/pictures2/portraits/10/100/10255.jpg\",\n    },\n  };\n  superHero && superHero.image ? (\n    <SuperHeroCard {...superHero} />\n  ) : (\n    <h3>Loading ...</h3>\n  );\n  useEffect(() => {\n    loadSuperHero();\n    return () => {};\n  }, []);\n\n  const getRandomSup = (event) => {\n    loadSuperHero();\n  };\n\n  // load random superhero\n  function loadSuperHero() {\n    const url = BASE_URL + Math.floor(Math.random() * 729);\n\n    fetch(`https://api.allorigins.win/get?url=${encodeURIComponent(url)}`)\n      .then((response) => {\n        if (response.ok) return response.json();\n        throw new Error(\"Network response was not ok.\");\n      })\n      .then((data) => {\n        setSuperHero({ superHero, ...JSON.parse(data.contents) });\n      });\n  }\n\n  let element =\n    superHero && superHero.image ? (\n      <SuperHeroCard {...superHero} />\n    ) : (\n      <h3>Loading ....</h3>\n    );\n  return (\n    <Fragment>\n      <div className={classes.header}>\n        <button onClick={(event) => getRandomSup(event)}>\n          Random Super Hero\n        </button>\n      </div>\n      {element}\n    </Fragment>\n  );\n}\n","export const BASE_URL = \"https://superheroapi.com/api.php/3441310675917369/\"","import logo from './logo.svg';\nimport './App.css';\nimport SuperHeroLayout from './SuperHeroLayout/SuperHeroLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SuperHeroLayout />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}